{"version":3,"file":"shop.component.js","sourceRoot":"","sources":["file:///D:/dev/shop/tmp/broccoli_type_script_compiler-input_base_path-77EpFaED.tmp/0/src/app/shop/shop.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,gCAA2C,6BAA6B,CAAC,CAAA;AACzE,wCAAqC,qCAAqC,CAAC,CAAA;AAC3E,uBAA6B,iBAAiB,CAAC,CAAA;AAW/C;IAGI,uBAAoB,KAAqB,EAC7B,cAA8B;QADtB,UAAK,GAAL,KAAK,CAAgB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAE/C,gCAAQ,GAAR;QAAA,iBAUC;QATG,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAEhD,WAAW,CAAC,IAAI,CAAC,UAAC,QAAwB;YACtC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,WAAW,CAAC,KAAK,CAAC,UAAA,GAAG;YACjB,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IACD,qCAAa,GAAb,UAAc,SAAiB;QAA/B,iBAKC;QAJG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC;aAChC,IAAI,CAAC,UAAC,QAAwB;YAC3B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IA/BL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,CAAC,+CAAqB,CAAC;YACnC,SAAS,EAAE,CAAC,gCAAc,CAAC;YAC3B,QAAQ,EAAE,qEAEL;SACR,CAAC;;qBAAA;IAyBF,oBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,qBAAa,gBAwBzB,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {ProductService, ProductModel} from '../products/product.service';\r\nimport {ProductsListComponent } from '../products/products-list.component';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'shop',\r\n    directives: [ProductsListComponent],\r\n    providers: [ProductService],\r\n    template: `\r\n    <products-list [isAdmin]=\"false\"></products-list>\r\n        `\r\n})\r\nexport class ShopComponent implements OnInit {\r\n    private products;\r\n\r\n    constructor(private route: ActivatedRoute,\r\n        private productService: ProductService) { }\r\n\r\n    ngOnInit() {\r\n        const prmProducts = this.productService.query();\r\n\r\n        prmProducts.then((products: ProductModel[]) => {\r\n            this.products = products;\r\n        });\r\n\r\n        prmProducts.catch(err => {\r\n            console.log('Sorry, cannot load the products, try again later');\r\n        });\r\n    }\r\n    removeProduct(productId: number) {\r\n        this.productService.remove(productId)\r\n            .then((products: ProductModel[]) => {\r\n                this.products = products;\r\n            });\r\n    }\r\n\r\n}"]}