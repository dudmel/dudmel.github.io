{"version":3,"file":"products-list.component.js","sourceRoot":"","sources":["file:///D:/dev/shop/tmp/broccoli_type_script_compiler-input_base_path-77EpFaED.tmp/0/src/app/products/products-list.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2D,eAAe,CAAC,CAAA;AAC3E,gCAA6C,6BAA6B,CAAC,CAAA;AAC3E,qCAAmC,+BACnC,CAAC,CADiE;AAClE,wCAAsC,iCACtC,CAAC,CADsE;AACvE,6BAA4B,sBAAsB,CAAC,CAAA;AACnD,iCAA6B,kCAAkC,CAAC,CAAA;AAChE,yCAAuC,4BAA4B,CAAC,CAAA;AA4CpE;IAKE,+BACU,cAA+B,EAC/B,WAAyB;QADzB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAc;QAJ3B,WAAM,GAAG,EAAC,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,CAAC;IAKvC,CAAC;IAGL,wCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAEhD,WAAW,CAAC,IAAI,CAAC,UAAC,QAAyB;YACzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE3B,CAAC,CAAC,CAAC;QAEH,WAAW,CAAC,KAAK,CAAC,UAAA,GAAG;YACnB,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAa,GAAb,UAAc,EAAE;QAAhB,iBAYC;QAVC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEnD,WAAW,CAAC,IAAI,CAAC,UAAC,QAAyB;YACzC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE3B,WAAW,CAAC,KAAK,CAAC,UAAA,GAAG;gBACnB,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IA9EH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,MAAM,EAAE,CAAC,mBAAmB,CAAC;YAC7B,UAAU,EAAE,CAAC,yCAAkB,EAAE,+CAAqB,EAAE,iDAAsB,CAAC;YAC/E,KAAK,EAAE,CAAC,+BAAY,CAAC;YACrB,QAAQ,EAAE,eAAe;YACzB,MAAM,EAAE,CAAC,SAAS,CAAC;YACnB,QAAQ,EAAE,8pCAiCT;SACF,CAAC;;6BAAA;IAsCF,4BAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,6BAAqB,wBAqCjC,CAAA","sourcesContent":["import { Component, OnInit, ViewChildren, OnChanges } from '@angular/core';\r\nimport { ProductService, ProductModel } from '../products/product.service';\r\nimport { AdminBtnsComponent } from '../admin/admin-btns.component'\r\nimport { CustomerBtnsComponent } from '../shop/customer-btns.component'\r\nimport { CartService } from '../shop/cart.service';\r\nimport { FilterByPipe } from '../shared/pipes/filter-list.pipe';\r\nimport { ProductFilterComponent } from './product-filter.component';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  styles: ['img {width: 50px}'],\r\n  directives: [AdminBtnsComponent, CustomerBtnsComponent, ProductFilterComponent],\r\n  pipes: [FilterByPipe],\r\n  selector: 'products-list',\r\n  inputs: ['isAdmin'],\r\n  template: `\r\n    <section style=\"margin-top:200px\">\r\n      <h2>Products</h2>\r\n      <product-filter (filterChange)=\"filter = $event\"></product-filter>\r\n      <a *ngIf=\"isAdmin\" routerLink=\"/product/edit\" class=\"btn btn-primary\">+ Add</a>\r\n     \r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n                <th>ID</th>\r\n                <th>Product</th>\r\n                <th>Price</th>\r\n                <th>Actions</th>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let product of products | filterBy: filter\">\r\n                <td> {{product.id}}    </td>\r\n                <td> {{product.name}}  </td>\r\n                <td> {{product.price | currency:'USD':true}} </td>\r\n                <td> <img [src]=\"product.getImgUrl()\"> </td>\r\n                <td> \r\n                  <adminBtns     \r\n                    *ngIf=\"isAdmin\"  \r\n                    [product]=\"product\"\r\n                    (productId) = \"removeProduct($event)\" ></adminBtns>\r\n                  <customersBtns *ngIf=\"!isAdmin\" [product]=\"product\" ></customersBtns>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n       \r\n    </section>\r\n\r\n\r\n  `\r\n})\r\nexport class ProductsListComponent implements OnInit {\r\n  private products;\r\n  private selectedProduct;\r\n  private filter = {byName: '', byPrice: ''}; \r\n\r\n  constructor(\r\n    private productService : ProductService,\r\n    private cartService : CartService\r\n  ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    const prmProducts = this.productService.query();\r\n\r\n    prmProducts.then((products : ProductModel[]) => {\r\n      this.products = products;\r\n        \r\n    });\r\n\r\n    prmProducts.catch(err => {\r\n      console.log('Sorry, cannot load the products, try again later');\r\n      console.log('Caught an error in ProductsList', err);\r\n    });\r\n  }\r\n  removeProduct(id) {\r\n    \r\n    const prmProducts = this.productService.remove(id);\r\n    \r\n    prmProducts.then((products : ProductModel[]) => {\r\n      this.products = products;\r\n    \r\n    prmProducts.catch(err => {\r\n      console.log('Sorry, cannot load the products, try again later');\r\n      console.log('Caught an error in removeProduct', err);\r\n    });\r\n    })\r\n  }\r\n}\r\n"]}