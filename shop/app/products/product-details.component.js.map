{"version":3,"file":"product-details.component.js","sourceRoot":"","sources":["file:///D:/dev/shop/tmp/broccoli_type_script_compiler-input_base_path-77EpFaED.tmp/0/src/app/products/product-details.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,gCAA2C,mBAAmB,CAAC,CAAA;AAC/D,uBAAuC,iBAAiB,CAAC,CAAA;AAiBzD;IAIE,iCACU,KAAqB,EACrB,MAAc,EACd,cAA+B;QAF/B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAiB;IACrC,CAAC;IAEL,0CAAQ,GAAR;QAAA,iBASC;QAPC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;YAC9B,IAAM,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,IAAM,UAAU,GAAG,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC/C,UAAU,CAAC,IAAI,CAAC,UAAC,OAAqB;gBACpC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACzB,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACJ,CAAC;IAlCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,2XASD;SAEV,CAAC;;+BAAA;IAqBF,8BAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,+BAAuB,0BAoBnC,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {ProductModel, ProductService} from './product.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'product-details',\r\n  template: `\r\n          <section *ngIf=\"product\" style=\"margin-top: 100px\"> \r\n            <h5>{{product.name}}</h5>\r\n            <a routerLink=\"/product/{{product.id}}/{{product.name}}\">\r\n              <img class=\"imgProduct\" [src]=\"product.getImgUrl()\" />\r\n            </a>\r\n            <h6>Price: {{product.price | currency:'USD':true}}</h6>\r\n\r\n          </section>\r\n          `\r\n\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  private product : ProductModel;\r\n\r\n  constructor( \r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private productService : ProductService\r\n  ) { }\r\n\r\n  ngOnInit() { \r\n\r\n    this.route.params.subscribe(params => {\r\n        const id = +params['id'];\r\n        const prmProduct = this.productService.get(id);\r\n        prmProduct.then((product: ProductModel) => {\r\n          this.product = product;\r\n        })\r\n    })\r\n  }\r\n}\r\n"]}